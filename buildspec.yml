version: 0.2

env:
  variables:
    IMAGE_TAG: "v5"  # âœ… Plain string value
    IMAGE_REPO_NAME: "ci-cd-demo" 

phases:
  pre_build:
    commands:
      - echo "Logging in to ECR..."
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com

  build:
    commands:
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - echo "Preparing deployment artifacts..."
      - mkdir -p codebuild_output
      - echo "$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG" > codebuild_output/image_uri.txt
      - cp appspec.yml codebuild_output/  # Critical for CodeDeploy

  post_build:
    commands:
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG



artifacts:
  files:
    -  codebuild_output/appspec.yml
    -  codebuild_output/image_uri.txt
  base-directory: "codebuild_output"  # CodePipeline will pass these to CodeDeploy